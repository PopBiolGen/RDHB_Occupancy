# Point process abundance model in JAGS
# static model -- for a single time slice of the data
model{
  #priors
  psi ~ dunif(0, 1) # probability of a DA colony being real
  sigma.det ~ dunif(100, 1000) # detection sigma
  alpha.u ~ dnorm(0, 1/4) # intercept of log-odds of detection at distance = 0
  beta.1.u ~ dnorm(0, 1/4) # slope of some linear effect on log odds detection
  beta.2.u ~ dnorm(0, 1/4) # slope of some linear effect on log odds detection
  
  # foraging kernel
  for (ff in 1:n.fd){
    fd[ff] ~ dnorm(0, 1/sigma.det^2)
  }
  
  # initialise colony locations
  for (jj in 1:M){ # step through potential colonies
    # place colonies
    c.j0[jj, 1] ~ dunif(x.min, x.max) # place initial colonies into t X Y array
    c.j0[jj, 2] ~ dunif(y.min, y.max)
    
    # which of these Z colonies are real?
    Z[jj] ~ dbern(psi)  # fraction of data augmented colonies
  }

  # Calculate likelihoods given colony dynamics
  for (ii in 1:II){ # step through survey sites and calculate likelihoods
    # detection at distance = 0 for each survey site
    logit(u.0[ii]) <- alpha.u + beta.1.u*sur.lev.var.1[ii] + beta.2.u*sur.lev.var.2[ii]
    # density at each site, from all colonies
    for (jj in 1:M){
      # distance from colony to site
      d.ij[ii, jj] <- sqrt((s.0[ii, 1] - c.j0[jj, 1])^2 + (s.0[ii, 2] - c.j0[jj, 2])^2)
      # expected detection from each colony
      u.ij[ii, jj] <- Z[jj]*u.0[ii]*exp(-d.ij[ii, jj]^2/(2*sigma.det^2)) # real or not, and density with distance
    }
    # detection probability from all sources
    det[ii] <- (1 - prod(1-u.ij[ii,])+0.0001)*0.999 # avoiding 1/0 here avoids issues with initialisation of model.
    obs.i[ii] ~ dbern(det[ii])
  }
  # output variables
  for (jj in 1:M){
    # inferred locations of colonies
    loc[jj, 1] <- c.j0[jj, 1] * Z[jj]
    loc[jj, 2] <- c.j0[jj, 2] * Z[jj]
  }
}